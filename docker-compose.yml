services:
  app:
    image: node:20.11.1-slim
    container_name: crococroc-nuxt3
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NUXT_HOST=0.0.0.0
      - DATABASE_URL=${DATABASE_URL}
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_ORIGIN=${AUTH_ORIGIN}
      - NUXT_SESSION_PASSWORD=${NUXT_SESSION_PASSWORD}
    volumes:
      - .:/app
    working_dir: /app
    command: sh -c "corepack enable && pnpm install && pnpm run build && node .output/server/index.mjs"
    networks:
      - web

  db:
    image: postgres:15-alpine
    container_name: crococroc-db
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=crococroc
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - app
    networks:
      - web

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

volumes:
  postgres_data:
    name: crococroc_postgres_data

networks:
  web:
    name: crococroc_network
    driver: bridge